<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mika.credit.facade.order.dao.OrderMapper">
    <!--ehcache缓存配置-->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache" >
        <property name="timeToIdleSeconds" value="3600"/><!--1 hour-->
        <property name="timeToLiveSeconds" value="3600"/><!--1 hour-->
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>
    <resultMap id="BaseResultMap" type="com.mika.credit.common.entity.order.Orders">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="no" jdbcType="VARCHAR" property="no" />
        <result column="source" jdbcType="TINYINT" property="source" />
        <result column="status" jdbcType="TINYINT" property="status" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="expect_time" jdbcType="TIMESTAMP" property="expectTime" />
        <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
        <result column="customer_id" jdbcType="INTEGER" property="customerId" />
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo"/>
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="customer_email" jdbcType="VARCHAR" property="customerEmail" />
        <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
        <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
        <result column="amount" jdbcType="DECIMAL" property="amount" />
        <result column="amount_actual" jdbcType="DECIMAL" property="amountActual"/>
        <result column="currency" jdbcType="VARCHAR" property="currency"/>
        <result column="has_pay" jdbcType="BIT" property="hasPay" />
        <result column="pay_method" jdbcType="TINYINT" property="payMethod" />
        <result column="detail_count" jdbcType="TINYINT" property="detailCount" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
    </resultMap>
    <sql id="Base_Column_List">
    id, `no`, source, status, create_time, pay_time, update_time, expect_time, finish_time,
    customer_id,customer_no ,customer_name, customer_email, create_user_id, create_user_name, amount,
    amount_actual,currency ,has_pay, pay_method, detail_count, remark
    </sql>
    <sql id="conditionWithOrderQuery">
        <where>
            <if test="id != null">
                AND id = #{id,jdbcType=BIGINT}
            </if>
            <if test="no != null and no!=''">
                AND  `no` = #{no,jdbcType=VARCHAR}
            </if>
            <if test=" source != null">
                AND source = #{source,jdbcType=TINYINT}
            </if>
            <if test="status != null">
                AND status = #{status,jdbcType=TINYINT}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="payTime != null">
                AND pay_time = #{payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="expectTime != null">
                AND expect_time = #{expectTime,jdbcType=TIMESTAMP}
            </if>
            <if test="finishTime != null">
                AND finish_time = #{finishTime,jdbcType=TIMESTAMP}
            </if>
            <if test="customerId != null">
                AND customer_id = #{customerId,jdbcType=INTEGER}
            </if>
            <if test="customerNo != null and customerNo!=''">
                AND customer_no = #{customerNo,jdbcType=VARCHAR}
            </if>
            <if test="customerName != null and customerName!=''">
                AND customer_name = #{customerName,jdbcType=VARCHAR}
            </if>
            <if test="customerEmail != null and customerEmail!=''">
                AND customer_email = #{customerEmail,jdbcType=VARCHAR}
            </if>
            <if test="createUserId != null">
                AND create_user_id = #{createUserId,jdbcType=INTEGER}
            </if>
            <if test="createUserName != null and createUserName!=''">
                AND create_user_name = #{createUserName,jdbcType=VARCHAR}
            </if>
            <if test="amount != null">
                AND amount = #{amount,jdbcType=DECIMAL}
            </if>
            <if test="amountActual != null">
                AND amount_actual = #{amountActual,jdbcType=DECIMAL}
            </if>
            <if test="currency != null and currency!=''">
                AND currency = #{currency,jdbcType=VARCHAR}
            </if>
            <if test="hasPay != null">
                AND has_pay = #{hasPay,jdbcType=BIT}
            </if>
            <if test="payMethod != null">
                AND pay_method = #{payMethod,jdbcType=TINYINT}
            </if>
            <if test="detailCount != null">
                AND  detail_count = #{detailCount,jdbcType=TINYINT}
            </if>
            <if test="remark != null and remark!=''">
                AND remark = #{remark,jdbcType=VARCHAR}
            </if>
            <if test="createDateFrom != null" >
                AND create_time &gt; #{createDateFrom,jdbcType=TIMESTAMP}
            </if>
            <if test="createDateTo != null" >
                AND create_time &lt; #{createDateTo,jdbcType=TIMESTAMP}
            </if>
        </where>
    </sql>
    <sql id="condition">
        <where>
            <if test="id != null">
                AND id = #{id,jdbcType=BIGINT}
            </if>
            <if test="no != null and no!=''">
                AND  `no` = #{no,jdbcType=VARCHAR}
            </if>
            <if test=" source != null">
                AND source = #{source,jdbcType=TINYINT}
            </if>
            <if test="status != null">
                AND status = #{status,jdbcType=TINYINT}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="payTime != null">
                AND pay_time = #{payTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                AND update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
            <if test="expectTime != null">
                AND expect_time = #{expectTime,jdbcType=TIMESTAMP}
            </if>
            <if test="finishTime != null">
                AND finish_time = #{finishTime,jdbcType=TIMESTAMP}
            </if>
            <if test="customerId != null">
                AND customer_id = #{customerId,jdbcType=INTEGER}
            </if>
            <if test="customerNo != null and customerNo!=''">
                AND customer_no = #{customerNo,jdbcType=VARCHAR}
            </if>
            <if test="customerName != null and customerName!=''">
                AND customer_name = #{customerName,jdbcType=VARCHAR}
            </if>
            <if test="customerEmail != null and customerEmail!=''">
                AND customer_email = #{customerEmail,jdbcType=VARCHAR}
            </if>
            <if test="createUserId != null">
                AND create_user_id = #{createUserId,jdbcType=INTEGER}
            </if>
            <if test="createUserName != null and createUserName!=''">
                AND create_user_name = #{createUserName,jdbcType=VARCHAR}
            </if>
            <if test="amount != null">
                AND amount = #{amount,jdbcType=DECIMAL}
            </if>
            <if test="amountActual != null">
                AND amount_actual = #{amountActual,jdbcType=DECIMAL}
            </if>
            <if test="currency != null and currency!=''">
                AND currency = #{currency,jdbcType=VARCHAR}
            </if>
            <if test="hasPay != null">
                AND has_pay = #{hasPay,jdbcType=BIT}
            </if>
            <if test="payMethod != null">
                AND pay_method = #{payMethod,jdbcType=TINYINT}
            </if>
            <if test="detailCount != null">
                AND  detail_count = #{detailCount,jdbcType=TINYINT}
            </if>
            <if test="remark != null and remark!=''">
                AND remark = #{remark,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>
    <select id="query" parameterType="com.mika.credit.common.entity.order.OrderQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        <include refid="condition"/>
        ORDER BY create_time DESC limit 1
    </select>
    <select id="queryListByOrderQuery" parameterType="com.mika.credit.common.entity.order.OrderQuery" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        <include refid="conditionWithOrderQuery"/>
        ORDER BY create_time*1 DESC
    </select>
    <select id="queryList" parameterType="com.mika.credit.common.entity.order.Orders" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders
        <include refid="condition"/>
        ORDER BY create_time*1 DESC
    </select>
    <delete id="deleteById" parameterType="java.lang.Long">
        delete from orders
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <select id="queryById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from orders WHERE id=#{id};
    </select>
    <delete id="delete" parameterType="com.mika.credit.common.entity.order.Orders">
        delete from orders
        <include refid="condition"/>
    </delete>
    <!--保存订单时返回自增主键-->
    <insert id="save" parameterType="com.mika.credit.common.entity.order.Orders" useGeneratedKeys="true" keyProperty="id">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="no != null">
                `no`,
            </if>
            <if test="source != null">
                source,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="expectTime != null">
                expect_time,
            </if>
            <if test="finishTime != null">
                finish_time,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="customerNo != null and customerNo != ''">
                customer_no,
            </if>
            <if test="customerName != null and customerName != ''">
                customer_name,
            </if>
            <if test="customerEmail != null and customerEmail != ''">
                customer_email,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createUserName != null and createUserName != ''">
                create_user_name,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="amountActual != null">
                amount_actual,
            </if>
            <if test="currency != null and currency != ''">
                currency,
            </if>
            <if test="hasPay != null">
                has_pay,
            </if>
            <if test="payMethod != null">
                pay_method,
            </if>
            <if test="detailCount != null">
                detail_count,
            </if>
            <if test="remark != null and remark != ''">
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="no != null and no != ''">
                #{no,jdbcType=VARCHAR},
            </if>
            <if test="source != null">
                #{source,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="expectTime != null">
                #{expectTime,jdbcType=TIMESTAMP},
            </if>
            <if test="finishTime != null">
                #{finishTime,jdbcType=TIMESTAMP},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="customerNo != null and customerNo != ''">
                #{customerNo,jdbcType=VARCHAR},
            </if>
            <if test="customerName != null and customerName != ''">
                #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="customerEmail != null and customerEmail != ''">
                #{customerEmail,jdbcType=VARCHAR},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=INTEGER},
            </if>
            <if test="createUserName != null and createUserName != ''">
                #{createUserName,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=DECIMAL},
            </if>
            <if test="amountActual != null">
                #{amountActual,jdbcType=DECIMAL},
            </if>
            <if test="currency != null and currency != ''">
                #{currency,jdbcType=VARCHAR},
            </if>
            <if test="hasPay != null">
                #{hasPay,jdbcType=BIT},
            </if>
            <if test="payMethod != null">
                #{payMethod,jdbcType=TINYINT},
            </if>
            <if test="detailCount != null">
                #{detailCount,jdbcType=TINYINT},
            </if>
            <if test="remark != null and remark != ''">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateStatus" parameterType="com.mika.credit.common.entity.order.Orders">
        update orders
        <set>
            <if test="status!=null">
                status=#{status},
            </if>
            update_time=now()
        </set>
        <where>
            id=#{id,jdbcType=BIGINT}
        </where>
    </update>
    <update id="updatePay" parameterType="com.mika.credit.common.entity.order.Orders">
        update orders
        <set>
            <if test="payTime!=null">
                pay_time=#{payTime},
            </if>
            <if test="payMethod!=null">
                pay_method=#{payMethod},
            </if>
            <if test="hasPay!=null">
                has_pay=#{hasPay},
            </if>
            <if test="amountActual!=null">
                amount_actual=#{amountActual},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
            <if test="finishTime!=null">
                finish_time=#{finishTime},
            </if>
            update_time=now()
        </set>
        <where>
            id=#{id,jdbcType=BIGINT}
        </where>
    </update>
    <update id="updateSubmit" parameterType="com.mika.credit.common.entity.order.Orders">
        update orders
        <set>
            <if test="expectTime!=null">
                expect_time=#{expectTime},
            </if>
            update_time=now()
        </set>
        <where>
            id=#{id,jdbcType=BIGINT}
        </where>
    </update>
    <update id="updateFinish" parameterType="com.mika.credit.common.entity.order.Orders">
        update orders
        <set>
            <if test="finishTime!=null">
                finish_time=#{finishTime},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
            update_time=now()
        </set>
        <where>
            id=#{id,jdbcType=BIGINT}
        </where>
    </update>
    <update id="updateDetailCount" parameterType="com.mika.credit.common.entity.order.Orders">
        update orders
        <set>
            <if test="detailCount!=null">
                detail_count=#{detailCount},
            </if>
            update_time=now()
        </set>
        <where>
            id=#{id,jdbcType=BIGINT}
        </where>
    </update>
    <select id="queryTotalByOrderQuery" resultType="java.lang.Integer" parameterType="com.mika.credit.common.entity.order.OrderQuery">
        select
        count(1)
        from orders
        <include refid="conditionWithOrderQuery"/>
    </select>
    <select id="queryTotal" resultType="java.lang.Integer" parameterType="com.mika.credit.common.entity.order.Orders">
        select
        count(1)
        from orders
        <include refid="condition"/>
    </select>
</mapper>
package org.tempuri;

import com.creditsafe.globaldata.operations.GlobalDataService;
import com.mika.credit.facade.front.en.Util.Tool;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Map;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-09-14T17:00:51.212+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "MainServiceBasic",
                  wsdlLocation = "https://webservices.creditsafe.com/GlobalData/1.3i/MainServiceBasic.svc",
                  targetNamespace = "http://tempuri.org/") 
public class MainServiceBasic extends Service {

    public final static URL WSDL_LOCATION;

    public final static URL LOCAL_URL;

    public final static QName SERVICE = new QName("http://tempuri.org/", "MainServiceBasic");
    public final static QName BasicHttpBindingGlobalDataService = new QName("http://tempuri.org/", "BasicHttpBinding_GlobalDataService");
    static {
        URL url = null;
        try {
            url = new URL(Tool.loadSafeUrl());
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MainServiceBasic.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "https://webservices.creditsafe.com/GlobalData/1.3i/MainServiceBasic.svc");
        }
        WSDL_LOCATION = url;

        url = MainServiceBasic.class.getResource("/wsdl/meta_1.wsdl");

        LOCAL_URL = url;
    }

    public MainServiceBasic(URL wsdlLocation) {
        super(LOCAL_URL, SERVICE);
    }

    public MainServiceBasic(URL wsdlLocation, QName serviceName) {
        super(LOCAL_URL, serviceName);
    }

    public MainServiceBasic() {
        super(LOCAL_URL, SERVICE);
    }

    public MainServiceBasic(WebServiceFeature ... features) {
        super(LOCAL_URL, SERVICE, features);
    }

    public MainServiceBasic(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public MainServiceBasic(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns GlobalDataService
     */
    @WebEndpoint(name = "BasicHttpBinding_GlobalDataService")
    public GlobalDataService getBasicHttpBindingGlobalDataService() {
        GlobalDataService globalDataService =  super.getPort(BasicHttpBindingGlobalDataService, GlobalDataService.class);

        BindingProvider provider = (BindingProvider) globalDataService;
        Map account = Tool.loadSafeAccount();
        provider.getRequestContext().put(BindingProvider.USERNAME_PROPERTY,account.get("username"));
        provider.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, account.get("password"));
        provider.getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, WSDL_LOCATION.toString());

        return globalDataService;
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns GlobalDataService
     */
    @WebEndpoint(name = "BasicHttpBinding_GlobalDataService")
    public GlobalDataService getBasicHttpBindingGlobalDataService(WebServiceFeature... features) {
        GlobalDataService globalDataService = super.getPort(BasicHttpBindingGlobalDataService, GlobalDataService.class, features);
        BindingProvider provider = (BindingProvider) globalDataService;
        Map account = Tool.loadSafeAccount();
        provider.getRequestContext().put(BindingProvider.USERNAME_PROPERTY,account.get("username"));
        provider.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY, account.get("password"));
        provider.getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, WSDL_LOCATION.toString());
        return globalDataService;
    }

}

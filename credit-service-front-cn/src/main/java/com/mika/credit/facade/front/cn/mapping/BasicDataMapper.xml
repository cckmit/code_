<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mika.credit.facade.front.cn.dao.impl.BasicDataDaoImpl" >
  <cache eviction="LRU" type="com.mika.credit.common.core.mybatis.cache.redis.sharded.MybatiesRedisCache" />
  <resultMap id="BaseResultMap" type="com.mika.credit.common.entity.report.cn.BasicData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="basic_code" property="basicCode" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
    <result column="dictionary_id" property="dictionaryId" jdbcType="INTEGER" />
    <result column="order_by" property="orderBy" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="value_cn" property="valueCN" jdbcType="VARCHAR" />
    <result column="value_en" property="valueEN" jdbcType="VARCHAR" />
    <result column="full_report_id" property="fullReportId" jdbcType="INTEGER" />
  </resultMap>

  <sql id="table"> basic_data </sql>

  <sql id="Base_Column_List" >
    id, basic_code, code, del_flag, dictionary_id, order_by, remark, update_time, value_cn, value_en,full_report_id
  </sql>

  <sql id="condition_sql">
    1=1
    <if test="id != null" >
      and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="basicCode != null" >
      and basic_code = #{basicCode,jdbcType=VARCHAR}
    </if>
    <if test="code != null" >
      and code = #{code,jdbcType=INTEGER}
    </if>
    <if test="delFlag != null" >
      and del_flag = #{delFlag,jdbcType=VARCHAR}
    </if>
    <if test="dictionaryId != null" >
      and dictionary_id = #{dictionaryId,jdbcType=INTEGER}
    </if>
    <if test="orderBy != null" >
      and order_by = #{orderBy,jdbcType=VARCHAR}
    </if>
    <if test="remark != null" >
      and remark = #{remark,jdbcType=VARCHAR}
    </if>
    <if test="updateTime != null" >
      and update_time = #{updateTime,jdbcType=VARCHAR}
    </if>
    <if test="valueCN != null" >
      and valuecn = #{valueCN,jdbcType=VARCHAR}
    </if>
    <if test="valueEN != null" >
      and valueen = #{valueEN,jdbcType=VARCHAR}
    </if>
    <if test="fullReportId != null" >
      and full_report_id = #{fullReportId,jdbcType=INTEGER}
    </if>
  </sql>

  <select id="getById" parameterType="Integer" resultMap="BaseResultMap">
    select * from
    <include refid="table" />
    where ID = #{id}
  </select>

  <select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from
    <include refid="table" />
    <where>
      <include refid="condition_sql" />
    </where>
  </select>

  <select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from
    <include refid="table" />
    <where>
      <include refid="condition_sql" />
    </where>
    <![CDATA[ order by ID desc]]>
  </select>

  <select id="listPageCount" parameterType="java.util.Map" resultType="Integer">
    select count(1) from
    <include refid="table" />
    <where>
      <include refid="condition_sql" />
    </where>
  </select>

  <insert id="insert" parameterType="com.mika.credit.common.entity.report.cn.BasicData" keyProperty="id" useGeneratedKeys="true">
    insert into
    <include refid="table" />
    (id, basic_code, code,
    del_flag, dictionary_id, order_by,
    remark, update_time, value_cn,
    value_en,full_report_id)
    values (#{id,jdbcType=INTEGER}, #{basicCode,jdbcType=VARCHAR}, #{code,jdbcType=INTEGER},
    #{delFlag,jdbcType=VARCHAR}, #{dictionaryId,jdbcType=INTEGER}, #{orderBy,jdbcType=VARCHAR},
    #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{valueCN,jdbcType=VARCHAR},
    #{valueEN,jdbcType=VARCHAR},#{fullReportId,jdbcType=INTEGER})
  </insert>

  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from
    <include refid="table" />
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <update id="update" parameterType="com.mika.credit.common.entity.report.cn.BasicData" >
    update basic_data
    set basic_code = #{basicCode,jdbcType=VARCHAR},
      code = #{code,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      dictionary_id = #{dictionaryId,jdbcType=INTEGER},
      order_by = #{orderBy,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      valueCN = #{value_cn,jdbcType=VARCHAR},
      valueEN = #{value_en,jdbcType=VARCHAR},
      full_report_id = #{fullReportId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertSelective" parameterType="com.mika.credit.common.entity.report.cn.BasicData" >
    insert into basic_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="basicCode != null" >
        basic_code,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="dictionaryId != null" >
        dictionary_id,
      </if>
      <if test="orderBy != null" >
        order_by,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="valueCN != null" >
        value_cn,
      </if>
      <if test="valueEN != null" >
        value_en,
      </if>
      <if test="fullReportId != null" >
        full_report_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="basicCode != null" >
        #{basicCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="dictionaryId != null" >
        #{dictionaryId,jdbcType=INTEGER},
      </if>
      <if test="orderBy != null" >
        #{orderBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="valueCN != null" >
        #{valueCN,jdbcType=VARCHAR},
      </if>
      <if test="valueEN != null" >
        #{valueEN,jdbcType=VARCHAR},
      </if>
      <if test="fullReportId != null" >
        #{fullReportId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateSelective" parameterType="com.mika.credit.common.entity.report.cn.BasicData" >
    update basic_data
    <set >
      <if test="basicCode != null" >
        basic_code = #{basicCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="dictionaryId != null" >
        dictionary_id = #{dictionaryId,jdbcType=INTEGER},
      </if>
      <if test="orderBy != null" >
        order_by = #{orderBy,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="valueCN != null" >
        value_cn = #{valueCN,jdbcType=VARCHAR},
      </if>
      <if test="valueEN != null" >
        value_en = #{valueEN,jdbcType=VARCHAR},
      </if>
      <if test="fullReportId != null" >
        full_report_id = #{fullReportId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>
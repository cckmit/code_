<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:cache="http://www.springframework.org/schema/cache"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/cache
http://www.springframework.org/schema/cache/spring-cache.xsd
"
	default-autowire="byName" default-lazy-init="false">
	
	
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="testWhileIdle" value="true" />
		<property name="minEvictableIdleTimeMillis" value="60000" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<property name="numTestsPerEvictionRun" value="-1" />
		<property name="maxTotal" value="50" />
		<property name="maxIdle" value="50" />
		<property name="minIdle" value="10" />
	</bean>

	<!--<bean id="jedisSentinelPool" class="redis.clients.jedis.JedisSentinelPool" destroy-method="destroy">-->
		<!--<constructor-arg name="masterName">-->
			<!--<value>mymaster</value>-->
		<!--</constructor-arg>-->
		<!--<constructor-arg name="sentinels">-->
			<!--<set value-type="java.lang.String">-->
				<!--<value>${redis.host}</value>-->
			<!--</set>-->
		<!--</constructor-arg>-->
		<!--<constructor-arg name="poolConfig" ref="jedisPoolConfig" />-->
	<!--</bean>-->

	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis1.host}" />
					<constructor-arg index="1" value="${redis1.port}" type="int" />
					<constructor-arg index="2" value="instance:01"/>
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis2.host}" />
					<constructor-arg index="1" value="${redis2.port}" type="int" />
					<constructor-arg index="2" value="instance:02"/>
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis3.host}" />
					<constructor-arg index="1" value="${redis3.port}" type="int" />
					<constructor-arg index="2" value="instance:03"/>
				</bean>
			</list>
		</constructor-arg>
	</bean>


	<!--<bean id="redisSentinelUtils" class="com.mika.credit.common.redis.RedisUtils">-->
		<!--<property name="jedisSentinelPool" ref="jedisSentinelPool" />-->
	<!--</bean>-->
	<bean id="redisUtils" class="com.mika.credit.common.redis.sharded.RedisUtils">
	<property name="shardedJedisPool" ref="shardedJedisPool" />
	</bean>

	<!-- redis caceh config end -->

	 <!-- generic cache manager --> 
   <cache:annotation-driven />
   <!-- generic cache manager --> 
   <bean id="cacheManager" class="com.mika.credit.common.redis.sharded.springImpl.CacheManager">
     <property name="caches"> 
       <set> 
         <bean 
           class="com.mika.credit.common.redis.sharded.springImpl.RedisCache"
           p:name="redisCache" /> 
       </set> 
     </property> 
   </bean> 
  
   
</beans>
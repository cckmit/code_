<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mika.credit.facade.globaleagle.core.dao.HistoryMapper" >
  <!--<cache eviction="LRU" type="com.mika.credit.common.core.mybatis.cache.redis.MybatiesRedisCache" />-->
  <resultMap id="BaseResultMap" type="com.mika.credit.facade.globaleagle.core.model.History" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_no" property="companyNo" jdbcType="VARCHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="country_id" property="countryId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, company_no,company_name, create_date, update_date, customer_id, country_id
  </sql>
  <select id="selectCountSelective" resultType="java.lang.Integer" parameterType="com.mika.credit.facade.globaleagle.core.model.History" >
    select
    count(1)
    from history
    <where>
      <if test="id != null" >
        and id = id
      </if>
      <if test="companyNo != null" >
        and company_no = companyNo
      </if>
      <if test="companyName != null" >
        and company_name=companyName
      </if>
      <if test="createDate != null" >
        and create_date=createDate
      </if>
      <if test="updateDate != null" >
        and update_date=updateDate
      </if>
      <if test="customerId != null" >
        and customer_id=customerId
      </if>
      <if test="countryId != null" >
        and country_id=countryId
      </if>
    </where>
  </select>
  <select id="selectSelective" resultMap="BaseResultMap" parameterType="com.mika.credit.facade.globaleagle.core.model.History" >
    select
    <include refid="Base_Column_List" />
    from history
    <where>
      <if test="id != null" >
       and id = id
      </if>
      <if test="companyNo != null" >
        and company_no = companyNo
      </if>
      <if test="companyName != null" >
        and company_name=companyName
      </if>
      <if test="createDate != null" >
        and create_date=createDate
      </if>
      <if test="updateDate != null" >
        and update_date=updateDate
      </if>
      <if test="customerId != null" >
        and customer_id=customerId
      </if>
      <if test="countryId != null" >
        and country_id=countryId
      </if>
    </where>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mika.credit.facade.globaleagle.core.model.History" >
    insert into history (id, company_no,company_name, create_date,
      update_date, customer_id, country_id
      )
    values (#{id,jdbcType=INTEGER},#{companyNo,jdbcType=VARCHAR},  #{companyName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
      #{updateDate,jdbcType=TIMESTAMP}, #{customerId,jdbcType=INTEGER}, #{countryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mika.credit.facade.globaleagle.core.model.History" >
    insert into history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyNo != null" >
        company_no,
      </if>
      <if test="companyName != null" >
        company_name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="countryId != null" >
        country_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyNo != null" >
        #{companyNo,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="countryId != null" >
        #{countryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mika.credit.facade.globaleagle.core.model.History" >
    update history
    <set >
      <if test="companyNo != null" >
        company_no = #{companyNo,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="countryId != null" >
        country_id = #{countryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mika.credit.facade.globaleagle.core.model.History" >
    update history
    set company_no = #{companyNo,jdbcType=VARCHAR},
    company_name = #{companyName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      customer_id = #{customerId,jdbcType=INTEGER},
      country_id = #{countryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
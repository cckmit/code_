<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mika.credit.facade.front.en.dao.impl.IdentificationDaoImpl" >
  <cache eviction="LRU" type="com.mika.credit.common.core.mybatis.cache.redis.sharded.MybatiesRedisCache" />
  <resultMap id="BaseResultMap" type="com.mika.credit.common.entity.report.en.Identification" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="crefo_no" property="crefoNo" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
    <result column="is_financial" property="isFinancial" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="attach_path" property="attachPath" jdbcType="VARCHAR" />
    <result column="financial_content" property="financialContent" jdbcType="LONGVARCHAR" />
    <result column="comments" property="comments" jdbcType="LONGVARCHAR" />
    <result column="comments_data_supplied" property="commentsDataSupplied" jdbcType="LONGVARCHAR" />
    <result column="interviewed" property="interviewed" jdbcType="LONGVARCHAR" />
    <result column="position" property="position" jdbcType="LONGVARCHAR" />
    <result column="full_report_id" property="fullReportId" jdbcType="INTEGER" />
  </resultMap>

  <sql id="table"> identification </sql>

  <sql id="Base_Column_List" >
    id, crefo_no, del_flag, is_financial, update_time, attach_path,
    financial_content, comments, comments_data_supplied, interviewed, position,full_report_id
  </sql>

  <sql id="condition_sql">
  <if test="id != null" >
    and id = #{id,jdbcType=INTEGER}
  </if>
    <if test="crefoNo != null" >
      and crefo_no = #{crefoNo,jdbcType=VARCHAR}
    </if>
    <if test="delFlag != null" >
      and del_flag = #{delFlag,jdbcType=VARCHAR}
    </if>
    <if test="isFinancial != null" >
      and is_financial = #{isFinancial,jdbcType=VARCHAR}
    </if>
    <if test="updateTime != null" >
      and update_time = #{updateTime,jdbcType=VARCHAR}
    </if>
    <if test="attachPath != null" >
      and attach_path = #{attachPath,jdbcType=VARCHAR}
    </if>
    <if test="financialContent != null" >
      and financial_content = #{financialContent,jdbcType=LONGVARCHAR}
    </if>
    <if test="comments != null" >
      and comments = #{comments,jdbcType=LONGVARCHAR}
    </if>
    <if test="commentsDataSupplied != null" >
      and comments_data_supplied = #{commentsDataSupplied,jdbcType=LONGVARCHAR}
    </if>
    <if test="interviewed != null" >
      and interviewed = #{interviewed,jdbcType=LONGVARCHAR}
    </if>
    <if test="position != null" >
      and position = #{position,jdbcType=LONGVARCHAR}
    </if>
    <if test="fullReportId != null" >
      and full_report_id = #{fullReportId,jdbcType=INTEGER}
    </if>
  </sql>

  <select id="getById" parameterType="Integer" resultMap="BaseResultMap">
    select * from
    <include refid="table" />
    where id = #{id}
  </select>

  <select id="listBy" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from
    <include refid="table" />
    <where>
      <include refid="condition_sql" />
    </where>
  </select>

  <select id="listPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select * from
    <include refid="table" />
    <where>
      <include refid="condition_sql" />
    </where>
    <![CDATA[ order by ID desc]]>
  </select>

  <select id="listPageCount" parameterType="java.util.Map" resultType="Integer">
    select count(1) from
    <include refid="table" />
    <where>
      <include refid="condition_sql" />
    </where>
  </select>

  <insert id="insert" parameterType="com.mika.credit.common.entity.report.en.Identification" keyProperty="id" useGeneratedKeys="true">
    insert into
    <include refid="table" />
    (id, crefo_no, del_flag,
    is_financial, update_time, attach_path,
    financial_content, comments, comments_data_supplied,
    interviewed, position,full_report_id)
    values (#{id,jdbcType=INTEGER}, #{crefoNo,jdbcType=VARCHAR}, #{delFlag,jdbcType=VARCHAR},
    #{isFinancial,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{attachPath,jdbcType=VARCHAR},
    #{financialContent,jdbcType=LONGVARCHAR}, #{comments,jdbcType=LONGVARCHAR}, #{commentsDataSupplied,jdbcType=LONGVARCHAR},
    #{interviewed,jdbcType=LONGVARCHAR}, #{position,jdbcType=LONGVARCHAR},#{fullReportId,jdbcType=INTEGER})
  </insert>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into
    <include refid="table" />
    (id, crefo_no, del_flag,
    is_financial, update_time, attach_path,
    financial_content, comments, comments_data_supplied,
    interviewed, position,full_report_id)
    values
    <foreach collection ="list" item="identification" index= "index" separator =",">
      (#{identification.id,jdbcType=INTEGER}, #{identification.crefoNo,jdbcType=VARCHAR}, #{identification.delFlag,jdbcType=VARCHAR},
      #{identification.isFinancial,jdbcType=VARCHAR}, #{identification.updateTime,jdbcType=VARCHAR}, #{identification.attachPath,jdbcType=VARCHAR},
      #{identification.financialContent,jdbcType=LONGVARCHAR}, #{identification.comments,jdbcType=LONGVARCHAR}, #{identification.commentsDataSupplied,jdbcType=LONGVARCHAR},
      #{identification.interviewed,jdbcType=LONGVARCHAR}, #{identification.position,jdbcType=LONGVARCHAR},#{identification.fullReportId,jdbcType=INTEGER})
    </foreach >
  </insert>

  <delete id="deleteById" parameterType="Integer" >
    delete from
    <include refid="table" />
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <update id="update" parameterType="com.mika.credit.common.entity.report.en.Identification" >
    update identification
    set crefo_no = #{crefoNo,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      is_financial = #{isFinancial,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      attach_path = #{attachPath,jdbcType=VARCHAR},
      financial_content = #{financialContent,jdbcType=LONGVARCHAR},
      comments = #{comments,jdbcType=LONGVARCHAR},
      comments_data_supplied = #{commentsDataSupplied,jdbcType=LONGVARCHAR},
      interviewed = #{interviewed,jdbcType=LONGVARCHAR},
      position = #{position,jdbcType=LONGVARCHAR},
	full_report_id = #{fullReportId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertSelective" parameterType="com.mika.credit.common.entity.report.en.Identification" >
    insert into identification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="crefoNo != null" >
        crefo_no,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="isFinancial != null" >
        is_financial,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="attachPath != null" >
        attach_path,
      </if>
      <if test="financialContent != null" >
        financial_content,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="commentsDataSupplied != null" >
        comments_data_supplied,
      </if>
      <if test="interviewed != null" >
        interviewed,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="fullReportId != null" >
        full_report_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="crefoNo != null" >
        #{crefoNo,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="isFinancial != null" >
        #{isFinancial,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="attachPath != null" >
        #{attachPath,jdbcType=VARCHAR},
      </if>
      <if test="financialContent != null" >
        #{financialContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=LONGVARCHAR},
      </if>
      <if test="commentsDataSupplied != null" >
        #{commentsDataSupplied,jdbcType=LONGVARCHAR},
      </if>
      <if test="interviewed != null" >
        #{interviewed,jdbcType=LONGVARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=LONGVARCHAR},
      </if>
      <if test="fullReportId != null" >
        #{fullReportId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateSelective" parameterType="com.mika.credit.common.entity.report.en.Identification" >
    update identification
    <set >
      <if test="crefoNo != null" >
        crefo_no = #{crefoNo,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="isFinancial != null" >
        is_financial = #{isFinancial,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="attachPath != null" >
        attach_path = #{attachPath,jdbcType=VARCHAR},
      </if>
      <if test="financialContent != null" >
        financial_content = #{financialContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=LONGVARCHAR},
      </if>
      <if test="commentsDataSupplied != null" >
        comments_data_supplied = #{commentsDataSupplied,jdbcType=LONGVARCHAR},
      </if>
      <if test="interviewed != null" >
        interviewed = #{interviewed,jdbcType=LONGVARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=LONGVARCHAR},
      </if>
      <if test="fullReportId != null" >
        full_report_id = #{fullReportId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
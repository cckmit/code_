<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mika.credit.facade.gugu.dao.PublicizeFeeMapper">
  <resultMap id="BaseResultMap" type="com.mika.credit.facade.gugu.model.PublicizeFee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="publicize_id" jdbcType="INTEGER" property="publicizeId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="money" jdbcType="REAL" property="money" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del_flag" jdbcType="VARCHAR" property="delFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, publicize_id, user_id, user_name, type, money, ip, update_time, del_flag
  </sql>
  <sql id="condition">
    <where>
      <if test="id != null and id != 0">
        and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="publicizeId != null and publicizeId != 0">
        and  publicize_id = #{publicizeId,jdbcType=INTEGER}
      </if>
      <if test="userId != null and userId != 0">
        and user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="userName != null">
        and user_name = #{userName,jdbcType=VARCHAR}
      </if>
      <if test="type != null ">
        and type = #{type,jdbcType=INTEGER}
      </if>
      <if test="money != null">
        and money = #{money,jdbcType=REAL}
      </if>
      <if test="ip != null">
        and ip = #{ip,jdbcType=VARCHAR}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="delFlag != null">
        and del_flag = #{delFlag,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from publicize_fee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="com.mika.credit.facade.gugu.model.PublicizeFee" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from publicize_fee
    <include refid="condition" />
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from publicize_fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mika.credit.facade.gugu.model.PublicizeFee" useGeneratedKeys="true" keyProperty="id">
    insert into publicize_fee (id, publicize_id, user_id, 
      user_name, type, money, 
      ip, update_time, del_flag
      )
    values (#{id,jdbcType=INTEGER}, #{publicizeId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{money,jdbcType=REAL}, 
      #{ip,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mika.credit.facade.gugu.model.PublicizeFee" useGeneratedKeys="true" keyProperty="id">
    insert into publicize_fee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="publicizeId != null">
        publicize_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="publicizeId != null">
        #{publicizeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=REAL},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mika.credit.facade.gugu.model.PublicizeFee">
    update publicize_fee
    <set>
      <if test="publicizeId != null">
        publicize_id = #{publicizeId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=REAL},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mika.credit.facade.gugu.model.PublicizeFee">
    update publicize_fee
    set publicize_id = #{publicizeId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      money = #{money,jdbcType=REAL},
      ip = #{ip,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>